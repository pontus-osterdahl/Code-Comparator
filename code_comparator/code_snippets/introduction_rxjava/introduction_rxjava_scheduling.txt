// RxJava has several operators for scheduling work on threads


//subscribeOn influences the thread where the observable is subcribed to, i.e. it affects the whole obsrvable and works upstream and dowstream
Observable.just("hello")
.doOnNext(e -> System.out.println("Current thread pre calling subscribeOn: " + Thread.currentThread().getName())).
subscribeOn(Schedulers.computation()).
subscribe(e -> System.out.println("Current thread post calling subscribeON: " + Thread.currentThread().getName()));

//observeOn influences the thread which the Observable will use below where tha>
Observable.just("hello").
map(String::toUpperCase).
doOnNext(e -> System.out.println("Current thread pre calling observeOn: " + Thread.currentThread().getName())).
observeOn(Schedulers.computation()).
subscribe(e -> System.out.println("Current thread post calling observeOn: " + Thread.currentThread().getName()));
